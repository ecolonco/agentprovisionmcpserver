# ============================================
# MCP Server - Environment Configuration
# ============================================

# Application Settings
APP_NAME=MCP Server
APP_VERSION=1.0.0
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# API Settings
API_V1_PREFIX=/api/v1
HOST=0.0.0.0
PORT=8000
WORKERS=4

# Security
SECRET_KEY=your-super-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Database Configuration
DATABASE_URL=postgresql+asyncpg://mcpuser:mcppassword@localhost:5432/mcpdb
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0
REDIS_MAX_CONNECTIONS=50

# Kafka Configuration
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_TOPIC_PREFIX=mcp
KAFKA_CONSUMER_GROUP=mcp-server
KAFKA_AUTO_OFFSET_RESET=earliest

# Temporal Configuration
TEMPORAL_HOST=localhost
TEMPORAL_PORT=7233
TEMPORAL_NAMESPACE=default
TEMPORAL_TASK_QUEUE=mcp-tasks

# Integration Credentials - ADP
ADP_CLIENT_ID=your-adp-client-id
ADP_CLIENT_SECRET=your-adp-client-secret
ADP_API_BASE_URL=https://api.adp.com
ADP_AUTH_URL=https://accounts.adp.com/auth/oauth/v2/token

# Integration Credentials - Eaglesoft
EAGLESOFT_API_KEY=your-eaglesoft-api-key
EAGLESOFT_API_BASE_URL=https://api.eaglesoft.com
EAGLESOFT_TENANT_ID=your-tenant-id

# Integration Credentials - DentalIntel
DENTALINTEL_API_KEY=your-dentalintel-api-key
DENTALINTEL_API_BASE_URL=https://api.dentalintel.com
DENTALINTEL_PRACTICE_ID=your-practice-id

# Integration Credentials - NetSuite
NETSUITE_ACCOUNT_ID=your-account-id
NETSUITE_CONSUMER_KEY=your-consumer-key
NETSUITE_CONSUMER_SECRET=your-consumer-secret
NETSUITE_TOKEN_ID=your-token-id
NETSUITE_TOKEN_SECRET=your-token-secret
NETSUITE_API_BASE_URL=https://your-account.suitetalk.api.netsuite.com

# Integration Credentials - Bank/Merchant Processors
MERCHANT_PROCESSOR_API_KEY=your-merchant-api-key
MERCHANT_PROCESSOR_API_BASE_URL=https://api.merchantprocessor.com

# ============================================
# Payment Processors - Stripe (Multi-Tenant)
# ============================================
# Default Stripe key (fallback)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key

# Tenant-specific Stripe keys
# TalleresIA
STRIPE_SECRET_KEY_TALLERESIA=sk_test_talleresia_key_here
STRIPE_PUBLISHABLE_KEY_TALLERESIA=pk_test_talleresia_key_here

# Eunacom
STRIPE_SECRET_KEY_EUNACOM=sk_test_eunacom_key_here
STRIPE_PUBLISHABLE_KEY_EUNACOM=pk_test_eunacom_key_here

# ============================================
# Payment Processors - Flow.cl (Chile)
# ============================================
# Default Flow credentials
FLOW_API_KEY=your_flow_api_key
FLOW_SECRET_KEY=your_flow_secret_key
FLOW_SANDBOX=true

# Tenant-specific Flow keys
# TalleresIA
FLOW_API_KEY_TALLERESIA=talleresia_flow_api_key
FLOW_SECRET_KEY_TALLERESIA=talleresia_flow_secret_key
FLOW_SANDBOX_TALLERESIA=true

# Eunacom
FLOW_API_KEY_EUNACOM=eunacom_flow_api_key
FLOW_SECRET_KEY_EUNACOM=eunacom_flow_secret_key
FLOW_SANDBOX_EUNACOM=true

# ============================================
# Payment Processors - Transbank (Chile)
# ============================================
TRANSBANK_API_KEY_TALLERESIA=transbank_key_talleresia
TRANSBANK_SECRET_KEY_TALLERESIA=transbank_secret_talleresia
TRANSBANK_COMMERCE_CODE_TALLERESIA=597012345678

TRANSBANK_API_KEY_EUNACOM=transbank_key_eunacom
TRANSBANK_SECRET_KEY_EUNACOM=transbank_secret_eunacom
TRANSBANK_COMMERCE_CODE_EUNACOM=597087654321

# ============================================
# Email Service - Gmail SMTP (Multi-Tenant)
# ============================================
# IMPORTANT: Generate App Password in Gmail:
# 1. Enable 2FA on your Gmail account
# 2. Go to https://myaccount.google.com/apppasswords
# 3. Generate App Password for "Mail"
# 4. Use the 16-character password (not your regular password)

# Default Gmail credentials
GMAIL_SMTP_USER=your_email@gmail.com
GMAIL_SMTP_PASSWORD=your_16_char_app_password
GMAIL_FROM_EMAIL=your_email@gmail.com
GMAIL_FROM_NAME=Your Company

# Tenant-specific Gmail accounts
# TalleresIA
GMAIL_SMTP_USER_TALLERESIA=talleresia@gmail.com
GMAIL_SMTP_PASSWORD_TALLERESIA=talleresia_app_password_here
GMAIL_FROM_EMAIL_TALLERESIA=talleresia@gmail.com
GMAIL_FROM_NAME_TALLERESIA=TalleresIA

# Eunacom (if needed - user said they have their own)
# GMAIL_SMTP_USER_EUNACOM=eunacom@gmail.com
# GMAIL_SMTP_PASSWORD_EUNACOM=eunacom_app_password_here
# GMAIL_FROM_EMAIL_EUNACOM=eunacom@gmail.com
# GMAIL_FROM_NAME_EUNACOM=Eunacom

# Observability
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_SERVICE_NAME=mcp-server

# CORS Settings
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOW_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=10

# Sync Settings
DEFAULT_SYNC_BATCH_SIZE=100
DEFAULT_SYNC_TIMEOUT_SECONDS=300
MAX_RETRY_ATTEMPTS=3
RETRY_BACKOFF_SECONDS=5

# Data Retention
AUDIT_LOG_RETENTION_DAYS=90
JOB_HISTORY_RETENTION_DAYS=30

# AWS/Cloud Settings (for Terraform deployment)
AWS_REGION=us-east-1
AWS_ACCOUNT_ID=your-aws-account-id
S3_BUCKET_NAME=mcp-server-data
ECS_CLUSTER_NAME=mcp-cluster
RDS_INSTANCE_CLASS=db.t3.medium

# ============================================
# Aremko Integration (Spa & Wellness Center)
# ============================================
# Database connection for Aremko Django PostgreSQL
AREMKO_DATABASE_URL=postgresql+asyncpg://aremko_user:aremko_password@localhost:5432/aremko_db

# Path to legacy data files (CSV from old system)
AREMKO_LEGACY_DATA_PATH=/Users/jorgeaguilera/Documents/GitHub/booking-system-aremko

# Aremko API Base URL (if needed for webhook callbacks)
AREMKO_API_BASE_URL=https://aremko.cl

# Optional: Anthropic Claude API for AI recommendations
ANTHROPIC_API_KEY=your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# Optional: Multi-tenant support for other spas
# AREMKO_DATABASE_URL_SPA2=postgresql+asyncpg://spa2_user:password@localhost:5432/spa2_db
# AREMKO_LEGACY_DATA_PATH_SPA2=/path/to/spa2/legacy/data
